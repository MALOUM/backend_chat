version: '3.5'

networks:
  ai-network:
    name: ai-network
    driver: bridge

services:
  # === MILVUS CLUSTER SERVICES ===
  
  # Etcd service
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - ai-network

  # Minio service for storage
  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - ai-network

  # Pulsar service for message queue
  pulsar:
    container_name: milvus-pulsar
    image: apachepulsar/pulsar:2.8.2
    command: ["bin/pulsar", "standalone"]
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/pulsar:/pulsar/data
    networks:
      - ai-network

  # Milvus Root Coordinator service
  rootcoord:
    container_name: milvus-rootcoord
    image: milvusdb/milvus:v2.3.3
    command: ["milvus", "run", "rootcoord"]
    environment:
      - ETCD_ENDPOINTS=etcd:2379
      - MINIO_ADDRESS=minio:9000
      - PULSAR_ADDRESS=pulsar://pulsar:6650
    depends_on:
      - "etcd"
      - "minio"
      - "pulsar"
    networks:
      - ai-network

  # Milvus Proxy service
  proxy:
    container_name: milvus-proxy
    image: milvusdb/milvus:v2.3.3
    command: ["milvus", "run", "proxy"]
    environment:
      - ETCD_ENDPOINTS=etcd:2379
      - MINIO_ADDRESS=minio:9000
      - PULSAR_ADDRESS=pulsar://pulsar:6650
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"
      - "pulsar"
    networks:
      - ai-network

  # Milvus Query Coordinator service
  querycoord:
    container_name: milvus-querycoord
    image: milvusdb/milvus:v2.3.3
    command: ["milvus", "run", "querycoord"]
    environment:
      - ETCD_ENDPOINTS=etcd:2379
      - MINIO_ADDRESS=minio:9000
      - PULSAR_ADDRESS=pulsar://pulsar:6650
    depends_on:
      - "etcd"
      - "minio"
      - "pulsar"
    networks:
      - ai-network

  # Milvus Query Node services
  querynode:
    container_name: milvus-querynode1
    image: milvusdb/milvus:v2.3.3
    command: ["milvus", "run", "querynode"]
    environment:
      - ETCD_ENDPOINTS=etcd:2379
      - MINIO_ADDRESS=minio:9000
      - PULSAR_ADDRESS=pulsar://pulsar:6650
    depends_on:
      - "querycoord"
    networks:
      - ai-network

  # Milvus Index Coordinator service
  indexcoord:
    container_name: milvus-indexcoord
    image: milvusdb/milvus:v2.3.3
    command: ["milvus", "run", "indexcoord"]
    environment:
      - ETCD_ENDPOINTS=etcd:2379
      - MINIO_ADDRESS=minio:9000
      - PULSAR_ADDRESS=pulsar://pulsar:6650
    depends_on:
      - "etcd"
      - "minio"
      - "pulsar"
    networks:
      - ai-network

  # Milvus Index Node service
  indexnode:
    container_name: milvus-indexnode1
    image: milvusdb/milvus:v2.3.3
    command: ["milvus", "run", "indexnode"]
    environment:
      - ETCD_ENDPOINTS=etcd:2379
      - MINIO_ADDRESS=minio:9000
      - PULSAR_ADDRESS=pulsar://pulsar:6650
    depends_on:
      - "indexcoord"
    networks:
      - ai-network

  # Milvus Data Coordinator service
  datacoord:
    container_name: milvus-datacoord
    image: milvusdb/milvus:v2.3.3
    command: ["milvus", "run", "datacoord"]
    environment:
      - ETCD_ENDPOINTS=etcd:2379
      - MINIO_ADDRESS=minio:9000
      - PULSAR_ADDRESS=pulsar://pulsar:6650
    depends_on:
      - "etcd"
      - "minio"
      - "pulsar"
    networks:
      - ai-network

  # Milvus Data Node service
  datanode:
    container_name: milvus-datanode1
    image: milvusdb/milvus:v2.3.3
    command: ["milvus", "run", "datanode"]
    environment:
      - ETCD_ENDPOINTS=etcd:2379
      - MINIO_ADDRESS=minio:9000
      - PULSAR_ADDRESS=pulsar://pulsar:6650
    depends_on:
      - "datacoord"
    networks:
      - ai-network

  # === APPLICATION SERVICES ===
  
  # MongoDB service
  mongodb:
    container_name: mongodb
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/mongodb:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    networks:
      - ai-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # Backend Application
  app:
    container_name: backend-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/app_temp:/app/temp
    environment:
      - MONGODB_URL=mongodb://admin:password@mongodb:27017
      - MONGODB_DB_NAME=llm_rag_app
      - MILVUS_HOST=proxy
      - MILVUS_PORT=19530
      - MILVUS_COLLECTION=document_embeddings
      - LM_STUDIO_BASE_URL=http://host.docker.internal:1234/v1
      - DEBUG=true
    depends_on:
      - mongodb
      - proxy
    networks:
      - ai-network
    restart: unless-stopped

volumes:
  mongo_data:
  milvus_data:
  etcd_data:
  minio_data: